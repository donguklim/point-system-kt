services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    env_file:
      - .env.docker
    depends_on:
      mysql_db:
        condition: service_healthy
      redis_cache:
        condition: service_started
    links:
      - redis_cache
      - mysql_db

  mysql_db:
    image: mysql:9.1
    env_file:
      - .env.docker
    ports:
      - '3306:3306'
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - mysql_data:/var/lib/mysql

  redis_cache:
    image: redis:7.4.1-alpine
    env_file:
      - .env.docker
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  db_creation:
    profiles: [ "commands" ]
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    command: gradle createDBTables
    env_file:
      - .env.docker
    depends_on:
      mysql_db:
        condition: service_healthy
    links:
      - mysql_db

  test:
    profiles: ["test"]
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    command: gradle test
    env_file:
      - .env.docker.test
    depends_on:
      - test_mysql_db
      - test_redis_cache
    links:
      - test_mysql_db
      - test_redis_cache

  test_mysql_db:
    profiles: ["test"]
    image: mysql:9.1
    env_file:
      - .env.docker.test
    ports:
      - '3306:3306'

  test_redis_cache:
    profiles: ["test"]
    image: redis:7.4.1-alpine
    env_file:
      - .env.docker.test
    ports:
      - '6379:6379'

volumes:
  mysql_data:
  redis_data: